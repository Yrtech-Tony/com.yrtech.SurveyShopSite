@{
    Layout = "~/Views/Report/_ReportLayout.cshtml";
    ViewBag.Title = "检核快报";
}


<style>
    .shadow-panel {
        display: flexbox;
        border-radius: 6px;
        box-shadow: 1.9px 3.8px 10px rgba(0, 0, 0, 0.035), 15px 30px 80px rgba(0, 0, 0, 0.07);
        padding: 10px;
        float: left;
    }


    element.style {
    }

    .condition {
        display: inline-flexbox;
        flex-flow: row wrap;
        -ms-flex-pack: justify;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 20px 30px 20px 23px;
        border-bottom: 1px solid #f2f3f4;
        background: #fff;
        box-shadow: 0 1px 4px 0 #e5e7ea;
        border-radius: 3px;
    }
</style>
<div id="container" class="col-md-10">

    <div class="form-inline condition">
        <div class="form-group" style="width:15%">
            <label class="control-label">年份:</label>
            <select id="year-sel" class="form-control" style="width:100px;padding-right:20px"></select>
        </div>
        <div class="form-group" style="width:20%">
            <label class="control-label">期号:</label>
            <select id="project-sel" class="form-control" style="width: 140px; padding-right: 20px"></select>
        </div>
        <div class="form-group" style="width:20%">
            <label class="control-label">区域:</label>
            <select id="area-sel" class="form-control" style="width: 140px; padding-right: 20px"></select>
        </div>
        <div class ="form-group" style="width:35%">
            <label class="control-label">经销商:</label>
            <select id="shop-sel" class="form-control" style="width: 300px"></select>
        </div >
        <button id="btnQuery" class="btn btn-primary">查询</button>

    </div>

    <div class="clearfix"></div>
    <div id="main-area">
        <div id="recheck-process-div" class="row" style=" overflow: auto; width: 100%; padding: 10px 0px;">
            <div id="recheck-process-B-div" class="  shadow-panel" style="width: 32%; height: 250px; margin-right: 10px; ">
            </div>
            <div id="recheck-process-C-div" class="  shadow-panel" style="width: 32%; height: 250px; margin-right: 10px;  ">
            </div>
            <div id="recheck-process-A-div" class=" shadow-panel" style="width: 32%; height: 250px; margin-right: 10px; ">
            </div>
           
        </div>
        <div class="row" style="width: 100%;">
            <div style="width: 32%; height: 400px; float: left; margin-right: 10px; ">
                <div id="index-score-B-div" class=" shadow-panel" style="width:100%; height: 300px;"> </div>
                <table id="index-score-B-table" class="table table-bordered" style="font-size:12px"></table>
            </div>
            <div style="width: 32%; height: 400px; float: left; margin-right: 10px;">
                <div id="index-score-C-div" class=" shadow-panel" style="width: 100%; height: 300px;"> </div>
                <table id="index-score-C-table" class="table table-bordered" style="font-size:12px"></table>
            </div>
            <div style="width: 32%; height: 400px; float: left; margin-right: 10px;  ">
                <div id="index-score-A-div" class=" shadow-panel" style="width: 100%; height: 300px;">
                </div>
                <table id="index-score-A-table" class="table table-bordered" style="font-size:12px"></table>
            </div> 
        </div>
    </div>
    <div id="main-shop" style="width: 100%; display: none; margin: auto; padding: 20px">
        <div style="width: 80%; height: 650px; text-align: center; margin: 0 auto;">
            <div id="index-score-N-div" class=" shadow-panel" style="width: 100%; height: 500px;">
            </div>
            <table id="index-score-N-table" class="table table-bordered"></table>
        </div>
    </div>
</div>
@section scripts{

    <script src="~/Scripts/api.js?20200517"></script>
    <script type="text/javascript" language="javascript">
        let firstLevelScore;
        let secondLevelScore;
        let countryData = {}
        $(function () {
            var roleType = loginUser.RoleType;
            $("#year-sel").change(function () {
                loadProject($(this).val(), function (data) {
                    if (data && data.length > 0) {
                        $("#project-sel").empty();
                        data.forEach(function (item) {
                            $("#project-sel").append($("<option>").val(item.ProjectId).text(item.ProjectName));
                        })
                    } else {
                        alert("当前年份无期号！");
                        return;
                    }

                    setTimeout(function () { $("#btnQuery").click(); }, 300)

                });
            });
            for (var i = 2020; i <= 2030; i++) {
                $("#year-sel").append($("<option>").text(i + "").val(i + ""));
            }
            var tYear = new Date().getFullYear();
            $("#year-sel").val(tYear);
            $("#year-sel").change();
            $("#area-sel").change(function () {
                var areaId = $(this).val();
                var data = loginUser["ShopList"];
                data = data.filter(function (shop) {
                    return shop.AreaId == areaId;
                })
                $("#shop-sel").empty();
                if (roleType != 'B_Shop') {
                    $("#shop-sel").append($("<option>").val("").text("全部"));
                    data.forEach(function (item) {
                        $("#shop-sel").append($("<option>").val(item.ShopId).text(item.ShopName));
                    })
                    $("#shop-sel").val('')
                } else {
                    data.forEach(function (item) {
                        $("#shop-sel").append($("<option>").val(item.ShopId).text(item.ShopName));
                    })
                    $("#shop-sel").val(data[0].ShopId)
                } 
               
            })
            if (loginUser.SmallAreaList) {
                $("#area-sel").empty();
               
                if (loginUser.SmallAreaList.length == 1) { 
                } else {
                    $("#area-sel").append($("<option>").val("").text("全部"));
                }
                loginUser.SmallAreaList.forEach(function (item) {
                    $("#area-sel").append($("<option>").val(item.AreaId).text(item.AreaName));
                })
                $("#area-sel").val(loginUser.SmallAreaList[0].AreaId).change()
            }
           
            
            //查询Id, string areaId, string shopId, string shopType = ""
            $("#btnQuery").click(function () {
                if ($("#project-sel").length == 0) {
                    alert("请选择期号！");
                    return;
                }
                $("#btnQuery").button('loading');
                if (roleType == 'B_Shop' || $("#shop-sel").val().length > 0) {
                    $("#main-area").hide()
                    $("#main-shop").show()
                } else {
                    $("#main-shop").hide()
                    $("#main-area").show()
                }
                setTimeout(function () {
                    //获取全国数据
                    $.ajaxSettings.async = false;
                    firstLevelScore = { title: [], country: [], standrad: [] }
                    if (roleType == 'B_Shop') {
                        getIndexScoreForCountry('N') 
                    } else {
                        getIndexScoreForCountry('A')
                        getIndexScoreForCountry('B')
                        getIndexScoreForCountry('C')
                    }
                    $.ajaxSettings.async = true;

                    if (roleType == 'B_Shop' || $("#shop-sel").val().length > 0) {
                        //选择经销商
                        getIndexScoreData('N')
                    } else {
                        drawRecheckProcessChart('A')
                        drawRecheckProcessChart('B')
                        drawRecheckProcessChart('C')
                        //区域  分A 中心店,B空间店 两种统计维度
                        getIndexScoreData('A')
                        getIndexScoreData('B')
                        getIndexScoreData('C')
                    }

                }, 200)
            });

            $("#btnClear").click(function () {
            });
        });

        //获取全国数据
        function getIndexScoreForCountry(shopType) {
            $.commonGet("ReportFile/ReportChapterScoreSearch", {
                projectId: $("#project-sel").val(),
                areaId: '',
                shopId: $("#shop-sel").val(),
                shopType: shopType
            }, function (data) {
                if (data) {
                    countryData[shopType] = data
                    firstLevelScore.country[shopType] = data.map(function (item) {
                        return item.Score
                    })
                }
            })
        }

        function drawRecheckProcessChart(shopType) {
            var container = document.getElementById('recheck-process-' + shopType + '-div')
            //选择经销商
            $.commonGet("ReportFile/ReportShopCompleteCountSearch", {
                projectId: $("#project-sel").val(),
                areaId: $("#area-sel").val(),
                shopId: $("#shop-sel").val(),
                shopType: shopType
            }, function (data) {
                $("#btnQuery").button('reset');
                var myChart = echarts.init(container);
                let serieData = [{
                    value: data[0].Count_Complete,
                    name: '已完成',
                }, {
                    value: data[0].Count_UnComplete,
                    name: '未完成',
                }]
                var option = {
                    title: {
                        text: (types[shopType] || '') + '检查进度',
                        left: 'center'
                    },
                    tooltip: {
                        trigger: 'item'
                    },
                     
                    series: [
                      {
                          name: 'Access From',
                          type: 'pie',
                          radius: '50%',
                          data: serieData,
                          emphasis: {
                              itemStyle: {
                                  shadowBlur: 10,
                                  shadowOffsetX: 0,
                                  shadowColor: 'rgba(0, 0, 0, 0.5)'
                              }
                          }
                      }
                    ]
                };

                myChart.setOption(option);
            })
        }

        function getIndexScoreData(shopType) {
            var container;
            if (shopType) {
                container = document.getElementById('index-score-' + shopType + '-div')
            } else {
                container = document.getElementById('index-score-A-div')
            }
            $.commonGet("ReportFile/ReportChapterScoreSearch", {
                projectId: $("#project-sel").val(),
                areaId: $("#area-sel").val(),
                shopId: $("#shop-sel").val(),
                shopType: shopType
            }, function (data) {
                $("#btnQuery").button('reset');
                console.log('ReportChapterScoreSearch=>', data)
                firstLevelScore.title = data.map(function (item) {
                    return item.ChapterName
                })
                firstLevelScore.standrad[shopType] = data.map(function (item) {
                    return item.Score
                })

                drawIndexScoreChart(shopType, data, container)
            })
        }

        var types = { 'A': '交付中心', 'B': '极狐中心', 'C': '极狐空间', 'N': '' }
        function drawIndexScoreChart(type, data, container) {
            if (!data || data.length == 0) return;
            const drilldownData = data.map(function (item) {
                return {
                    dataGroupId: item.ChapterName,
                    data: item.ReportSubjectScoreList.map(function (item) {
                        return [item.CheckPoint, item.Score]
                    })
                }
            })
            
            const seriesData = data.map(function (item) {
                return {
                    value: item.Score,
                    groupId: item.ChapterName
                }
            }).reverse()
            var xAxisData = seriesData.map(function (item) {
                return item.groupId
            })
            var scoreArr = data.map(function (item) { return item.Score })
            var totalScore1 =scoreArr.length>0? eval(scoreArr.join('+')):''
            var myChart = echarts.init(container);
            var option = {
                grid: {
                    containLabel: true
                },
                title: {
                    text: (types[type] || '') + '【一级指标】 总分：' + totalScore1,
                    left: 'center',
                    textStyle: {
                        fontFamily: "Microsoft YaHei",
                        fontSize: 16
                    }
                },
                xAxis: {},
                yAxis: {
                    data: xAxisData
                },
                dataGroupId: '',
                animationDurationUpdate: 500,
                series: {
                    id: 'sales',
                    type: 'bar',
                    data: seriesData
                },
                graphic: [{
                    type: 'text',
                    style: {
                        text: ''
                    }
                }]
            };

            myChart.on('click', function (event) {
                if (event.data) {
                    var subData = drilldownData.find(function (data) {
                        return data.dataGroupId === event.data.groupId;
                    });
                    console.log(subData)
                    if (!subData) {
                        return;
                    }
                    secondLevelScore = { title: [], standrad: {}, country: {} }
                    //处理表格值
                    secondLevelScore.title = subData.data.map(function (item) {
                        return item[0];
                    })
                    secondLevelScore.standrad[type] = subData.data.map(function (item) {
                        return item[1];
                    })
                    for (var i in countryData[type]) {
                        var item = countryData[type][i]
                        if (item.ChapterName == event.data.groupId) {
                            secondLevelScore.country[type] = item.ReportSubjectScoreList.map(function (item) {
                                return item.Score
                            })
                            console.log('find ' + event.data.groupId + ' data', item)
                        }
                    }

                    console.log('secondLevelScore', secondLevelScore)
                    bindIndexScoreTable(secondLevelScore, type) 
                    var totalScore2 = secondLevelScore.standrad[type]?eval(secondLevelScore.standrad[type].join('+')):''
                    myChart.setOption({
                        title: {
                            text: (types[type] || '') + '【' + event.data.groupId + '】总分：' + totalScore2,
                            left: 'center',
                            textStyle: {
                                fontFamily: "Microsoft YaHei",
                                fontSize: 16
                            }
                        },
                        yAxis: {
                            data: subData.data.map(function (item) {
                                return item[0];
                            }).reverse()
                        },
                        series: {
                            type: 'bar',
                            id: 'sales',
                            dataGroupId: subData.dataGroupId,
                            data: subData.data.map(function (item) {
                                return item[1];
                            }).reverse(),
                            universalTransition: {
                                enabled: true,
                                divideShape: 'clone'
                            }
                        },
                        graphic: [
                          {
                              type: 'text',
                              right: 20,
                              top: 30,
                              style: {
                                  text: '返回',
                                  fontSize: 18
                              },
                              onclick: function () {
                                  bindIndexScoreTable(firstLevelScore, type)
                                  myChart.setOption(option);
                              }
                          }
                        ]
                    });
                }
            });

            bindIndexScoreTable(firstLevelScore, type)
            myChart.setOption(option);
        }

        function bindIndexScoreTable(data, type) {
            var table = $('#index-score-' + type + '-table')
            table.empty()
            var width = 100 / (data.title.length + 1)
            if (data.title) {
               
                var tr = $("<tr>");
                tr.append($("<th>").html('').css('width',width+'%'));
                data.title.forEach(function (item) {
                    tr.append($("<th>").html(item).css('width', width + '%'));
                })
                table.append(tr)
            }
            if (data.standrad && data.standrad[type]) {
                var tr = $("<tr>");
                tr.append($("<td>").html('标准分值').css('width', width + '%'));
                data.standrad[type].forEach(function (item) {
                    tr.append($("<td style='text-align:center'>").html(item).css('width', width + '%'));
                })
                table.append(tr)
            }
            if (data.country && data.country[type]) {
                var tr = $("<tr>");
                tr.append($("<td>").html('全国均值').css('width', width + '%'));
                data.country[type].forEach(function (item) {
                    tr.append($("<td style='text-align:center'>").html(item).css('width', width + '%'));
                })
                table.append(tr)
            }
        }
    </script>
}
