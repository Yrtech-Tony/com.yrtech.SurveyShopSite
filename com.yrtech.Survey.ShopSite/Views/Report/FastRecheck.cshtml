@{
    Layout = "~/Views/Report/_ReportLayout.cshtml";
    ViewBag.Title = "检核快报";
}


<style>
    .shadow-panel {
        display: flexbox;
        border-radius: 6px;
        box-shadow: 1.9px 3.8px 10px rgba(0, 0, 0, 0.035), 15px 30px 80px rgba(0, 0, 0, 0.07);
        padding: 10px;
        float: left;
    }


    element.style {
    }

    .condition {
        display: inline-flexbox;
        flex-flow: row wrap;
        -ms-flex-pack: justify;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 20px 30px 20px 23px;
        border-bottom: 1px solid #f2f3f4;
        background: #fff;
        box-shadow: 0 1px 4px 0 #e5e7ea;
        border-radius: 3px;
    }
</style>
<div id="container" class="col-md-10">

    <div class="form-inline condition">
        <div class="form-group" style="width:15%">
            <label class="control-label">年份:</label>
            <select id="year-sel" class="form-control" style="width:100px;padding-right:20px"></select>
        </div>
        <div class="form-group" style="width:20%">
            <label class="control-label">期号:</label>
            <select id="project-sel" class="form-control" style="width: 140px; padding-right: 20px"></select>
        </div>
        <div class="form-group" style="width:20%">
            <label class="control-label">城市:</label>
            <select id="area-sel" class="form-control" style="width: 140px; padding-right: 20px"></select>
        </div>
        <div class ="form-group" style="width:35%">
            <label class="control-label">门店:</label>
            <select id="shop-sel" class="form-control" style="width: 300px"></select>
        </div > 

    </div>

    <div class="clearfix"></div>
    <div id="main-area" class="">
        <ul id="report-type-tab" class="nav nav-tabs" role="tablist"> 
        </ul>
        <div  class="tab-content"> 
        </div> 
        <div   style="width: 100%;  ">
            <div style="width: 30%; float:left">
                
                <div id="recheck-process-div" class="shadow-panel" style="width: 100%; height: 300px; "> 
                </div>
                <div id="recheck-process-div-0" class=" shadow-panel" style="width: 100%; height: 300px; ">
                </div>
            </div>
            
            <div style="width: 70%; height: 600px; float: right; ">
                <div id="index-score-div" class="shadow-panel" style="width: 100%; min-height:600px">
                </div>
                <table id="index-score-table" class="table table-bordered" style="font-size: 12px; min-height: 150px; display:none"></table>
            </div>  
        </div>
    </div> 
</div>
@section scripts{ 
    <script src="~/Scripts/api.js?20200517"></script>
    <script type="text/javascript" language="javascript">
        let firstLevelScore;
        let secondLevelScore;
        let countryData = {}
        $(function () {
            var roleType = loginUser.RoleType;
            $("#year-sel").change(function () {
                loadProject($(this).val(), function (data) {
                    if (data && data.length > 0) {
                        $("#project-sel").empty();
                        data.forEach(function (item) {
                            $("#project-sel").append($("<option>").val(item.ProjectId).text(item.ProjectName));
                        })
                    } else {
                        alert("当前年份无期号！");
                        return;
                    }

                    //初始化报告类型
                    setTimeout(function () {
                        loadReportType()
                    }, 300)

                });
            });
            for (var i = 2020; i <= 2030; i++) {
                $("#year-sel").append($("<option>").text(i + "").val(i + ""));
            }
            var tYear = new Date().getFullYear();
            $("#year-sel").val(tYear);
            $("#year-sel").change();
            $("#shop-sel").empty();
            $("#area-sel").change(function () { 
                var areaId = $(this).val();
                var data = loginUser["ShopList"];
                data = data.filter(function (shop) {
                    return shop.AreaId == areaId;
                })
                $("#shop-sel").empty();
               
                if (roleType != 'B_Shop') {
                    $("#shop-sel").append($("<option>").val("").text("全部"));
                    data.forEach(function (item) {
                        $("#shop-sel").append($("<option>").val(item.ShopId).text(item.ShopName));
                    })
                    $("#shop-sel").val('')
                } else {
                    data.forEach(function (item) {
                        $("#shop-sel").append($("<option>").val(item.ShopId).text(item.ShopName));
                    })
                    $("#shop-sel").val(data[0].ShopId)
                }

                //选择区域  自动查询
                setTimeout(function () { 
                    search()
                },10)
                
            })
            $("#shop-sel").change(function () {
                //选择经销商  自动查询
                setTimeout(function () { 
                    search()
                }, 10)
            })
            if (loginUser.SmallAreaList) {
                $("#area-sel").empty();
               
                if (loginUser.SmallAreaList.length == 1) { 
                } else {
                    $("#area-sel").append($("<option>").val("").text("全部"));
                }
                loginUser.SmallAreaList.forEach(function (item) {
                    $("#area-sel").append($("<option>").val(item.AreaId).text(item.AreaName));
                })
                if (loginUser.SmallAreaList.length > 1) {
                    $("#area-sel").val('')
                    $("#shop-sel").append($("<option>").val("").text("全部"));
                } else {
                    $("#area-sel").val(loginUser.SmallAreaList[0].AreaId).change()
                }
            }
            
            $("#btnClear").click(function () {
            });
        });

        //初始化报告类型
        function loadReportType() {
            startLoading()
            $.commonGet("Master/GetReportType", {
                projectId: $("#project-sel").val(),
                reportTypeId: '',
                reportTypeCode: ''
            }, function (data) {
                if (data) {
                    console.log('GetReportType', data) 
                    for (var i in data) { 
                        var li = $('<li role="presentation"></li>')
                        var a = $('<a role="tab" data-toggle="tab"></a>')
                        li.data('id', data[i].ReportTypeId)
                        a.html(data[i].ReportTypeName)
                        li.append(a)
                        li.click(function () {
                            let typeId = $(this).data('id')
                            console.log('click tab', typeId)
                            search(typeId)
                        })
                        if(i == 0){
                            li.addClass('active')
                            li.click()
                        }
                        
                        $("#report-type-tab").append(li)
                    } 
                } 
            })
        }

        //报告查询
        function search(reportTypeId) {
            let typeId = reportTypeId|| $('#report-type-tab li.active').data('id')
            if ($("#project-sel").length == 0) {
                alert("请选择期号！");
                return;
            } 
            
            setTimeout(function () {
                firstLevelScore = { title: [], country: [], standrad: [] }
                //饼图
                drawRecheckProcessChart(typeId)
                drawAppealProcessChart(typeId)
                //区域 
                getIndexScoreData(typeId)

            }, 20)
        }

        //申诉进度
        function drawAppealProcessChart(reportTypeId) {
            var container = document.getElementById('recheck-process-div-0')
            //选择经销商
            $.commonGet("ReportFile/ReportShopCompleteCountAppealSearch", {
                projectId: $("#project-sel").val(),
                areaId: $("#area-sel").val(),
                shopId: $("#shop-sel").val(),
                shopType: reportTypeId
            }, function (data) {
                drawProcessPieChart(container, data, '申诉进度') 
            }, function () { })
        }
        //检查进度
        function drawRecheckProcessChart(reportTypeId) {
            var container = document.getElementById('recheck-process-div')
            //选择经销商
            $.commonGet("ReportFile/ReportShopCompleteCountSearch", {
                projectId: $("#project-sel").val(),
                areaId: $("#area-sel").val(),
                shopId: $("#shop-sel").val(),
                shopType: reportTypeId
            }, function (data) {
                drawProcessPieChart(container, data, '检查进度')
                
            }, function () {  })
        }

        function drawProcessPieChart(container, data, title) {
            var myChart = echarts.getInstanceByDom(container)
            if (data.length == 0) {
                data = [{ Count_Complete: 0, Count_UnComplete: 0 }]
            }
            let serieData = [{
                value: data[0].Count_Complete,
                name: '已完成',
            }, {
                value: data[0].Count_UnComplete,
                name: '未完成',
            }]
            let total = data[0].Count_Complete + data[0].Count_UnComplete
            let rate = total == 0 ? 0 : (data[0].Count_Complete * 100 / total).toFixed(2)
            if (!myChart) {
                var myChart = echarts.init(container);

                var option = {
                    legend: {
                        bottom: '5%',
                    },
                    title: {
                        //text: (types[shopType] || '') + '检查进度',
                        text: title,
                        subtext: '完成率：' + rate + '%',
                        textStyle: {
                            fontSize: 16,
                        },
                        left: '1%'
                    },
                    tooltip: {
                        show: false,
                        //trigger: 'item'
                    },
                    color: ['#188df0', '#cccccc'],
                    series: [
                      {
                          type: 'pie', 
                          radius: ['45%', '60%'],
                          avoidLabelOverlap: false,
                          itemStyle: {
                              borderRadius: 10,
                              borderColor: '#fff',
                              borderWidth: 2
                          },
                          label: {
                              show: true,
                              position: 'outside',
                              formatter: '{c0}',
                          },
                          emphasis: {
                              label: {
                                  show: true,
                                  formatter: '{b0}: {c0}',
                                  fontSize: 16,
                                  fontWeight: 'bold'
                              }
                          },
                          labelLine: {
                              //show: false
                          },
                          data: serieData
                      }
                    ]
                };

                myChart.setOption(option);
            } else {
                myChart.setOption({ title: { subtext: '完成率：' + rate + '%', }, series: { data: serieData } });
            }
        }

        function getIndexScoreData(reportTypeId) {
            startLoading()
            var container = document.getElementById('index-score-div') 
            $.commonGet("ReportFile/ReportChapterScoreSearchByProject", {
                projectId: $("#project-sel").val(),
                areaId: $("#area-sel").val(),
                provinceId:'',
                shopId: $("#shop-sel").val(),
                shopType: reportTypeId
            }, function (data) { 
                console.log('ReportChapterScoreSearch=>', data)
                //if (data.length == 0) return
                firstLevelScore.title = data.map(function (item) {
                    return item.ChapterName
                })
                firstLevelScore.standrad  = data.map(function (item) {
                    return item.FullScore
                })

                drawIndexScoreChart(data, container)

                endLoading()
            }, function () {   })
        }

        var types = { 'A': '交付中心', 'B': '极狐中心', 'C': '极狐空间', 'N': '' }
        function drawIndexScoreChart( data, container) {
            const drilldownData = data.map(function (item) {
                return {
                    dataGroupId: item.ChapterName,
                    data: item.ReportSubjectScoreList.map(function (item) {
                        return [item.CheckPoint, item.Score, item.CountrySumScore]
                    }),
                    SumScore: item.ReportSubjectScoreList[0].SumScore||0
                }
            })
            
            const seriesData = data.map(function (item) {
                return {
                    value: item.Score.toFixed(1),
                    groupId: item.ChapterName
                }
            }).reverse()
            const seriesData2 = data.map(function (item) {
                return {
                    value: item.CountrySumScore?item.CountrySumScore.toFixed(1):0,
                    groupId: item.ChapterName
                }
            }).reverse()
            var xAxisData = seriesData.map(function (item) {
                return item.groupId
            })
            var SumScore = data.length == 0 ? 0 : (data[0].SumScore||0)
            //var scoreArr = data.map(function (item) { return item.Score })
            //var totalScore1 =scoreArr.length>0? eval(scoreArr.join('+')):''
             
            var myChart = echarts.getInstanceByDom(container)
            if (myChart) {
                myChart.dispose()
            }  
            myChart = echarts.init(container);
            var option = {
                legend: {
                    right: "5%",
                },
                grid: {
                    containLabel: true
                },
                title: {
                    text: '环节得分',//'总分：' + SumScore.toFixed(1),
                    subtext: '总分：' + SumScore.toFixed(1),
                    subtextStyle: {
                    },
                    left: '1%',
                    textStyle: {
                        fontSize: 16
                    }
                },
                xAxis: {
                    splitLine: {
                        show: false
                    }
                },
                yAxis: {
                    data: xAxisData
                },
                color: ['#fff200'],
                dataGroupId: '',
                animationDurationUpdate: 500,
                series: [{
                    name: '得分',
                    type: 'bar',
                    data: seriesData,
                    barWidth: '20px',
                    label: {
                        show: true,
                        position: 'inside',
                        formatter: '{c}',
                        color: '#fff'
                    },
                    showBackground: true,
                    itemStyle: {
                        borderRadius: [0, 5, 5, 0],
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                          { offset: 0, color: '#83bff6' },
                          { offset: 0.5, color: '#188df0' },
                          { offset: 1, color: '#188df0' }
                        ])
                    },
                    emphasis: {
                        itemStyle: {
                            barWidth: '22px',
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                              { offset: 0, color: '#2378f7' },
                              { offset: 0.7, color: '#2378f7' },
                              { offset: 1, color: '#83bff6' }
                            ])
                        }
                    },
                }, {
                    name: '全国均值',
                    type: 'line',
                    data: seriesData2,
                    label: {
                        show: true,
                        position: 'right',
                        formatter: '{c}',
                        color: '#000'
                    },
                }]
            };

            myChart.on('click', function (event) {
                if (event.data) {
                    var subData = drilldownData.find(function (data) {
                        return data.dataGroupId === event.data.groupId;
                    });
                    console.log(subData)
                    if (!subData) {
                        return;
                    }
                    secondLevelScore = { title: [], standrad: {}, country: {} }
                    //处理表格值
                    secondLevelScore.title = subData.data.map(function (item) {
                        return item[0];
                    })
                    var subOne = data.find(function (item) {
                        return item.ChapterName === event.data.groupId;
                    });
                    secondLevelScore.standrad = subOne.ReportSubjectScoreList.map(function (item) {
                        return item.FullScore;
                    })
                    //var scoreArr = subData.data.map(function (item) {


                    console.log('secondLevelScore', secondLevelScore)
                    bindIndexScoreTable(secondLevelScore)
                    //var totalScore2 = scoreArr ? eval(scoreArr.join('+')) : ''
                    var SumScore2 = data.length == 0 ? 0 : data[0].SumScore
                    myChart.setOption({
                        title: {
                            text: '指标得分',
                            subtext: '【' + event.data.groupId + '】总分：' + subData.SumScore.toFixed(1),
                            subtextStyle: {
                            },
                            left: '1%',
                            textStyle: {
                                fontSize: 16
                            }
                        },
                        yAxis: {
                            data: subData.data.map(function (item) {
                                return item[0];
                            }).reverse()
                        },
                        series: [{
                            type: 'bar',
                            dataGroupId: subData.dataGroupId,
                            data: subData.data.map(function (item) {
                                return item[1].toFixed(1);
                            }).reverse(),
                            universalTransition: {
                                enabled: true,
                                divideShape: 'clone'
                            }
                        }, {
                            type: 'line',
                            dataGroupId: subData.dataGroupId,
                            data: subData.data.map(function (item) {
                                return item[2] ? item[2].toFixed(1) : 0;
                            }).reverse(),
                            universalTransition: {
                                enabled: true,
                                divideShape: 'clone'
                            }
                        }],
                        graphic: [
                          {
                              type: 'text',
                              right: 20,
                              top: 30,
                              style: {
                                  text: '返回',
                                  fontSize: 18
                              },
                              onclick: function () {
                                  //bindIndexScoreTable(firstLevelScore, true)
                                  myChart.setOption(option);
                              }
                          }
                        ]
                    });
                }
            });
            //bindIndexScoreTable(firstLevelScore, true)
            myChart.setOption(option);
        }

        function bindIndexScoreTable(data,isFirst) {
            var table = $('#index-score-table')
            table.empty()
            var width = 100 / (data.title.length + 1)
            if (data.title && data.title.length>0) {
                var tr = $("<tr>");
                tr.append($("<th style='text-align:center'>").html('').css('width', width + '%'));
                data.title.forEach(function (item) {
                    tr.append($("<th style='text-align:center'>").html(item).css('width', width + '%'));
                })
                table.append(tr)
            }else {
                return
            }
            if (data.standrad && data.standrad) {
                var tr = $("<tr>");
                if (isFirst) {
                    tr.append($("<td rowspan='2' style='text-align:center'>").html('标准分值').css('width', width + '%'));
                } else {
                    tr.append($("<td style='text-align:center'>").html('标准分值').css('width', width + '%'));
                }
               
                data.standrad.forEach(function (item) {
                    tr.append($("<td style='text-align:center'>").html(item).css('width', width + '%'));
                })
                table.append(tr)
            }
            if (isFirst) {
                var tr = $("<tr>");
                var total = eval(data.standrad.join('+'))
                tr.append($("<td style='font-weight:800; font-size:16px;text-align:center' colspan='" + data.standrad.length + "'>").html('总分值：'+total+'分').css('width', width + '%'));
                table.append(tr)
            }
           
        }
    </script>
}
